name: Process KIP Submissions

permissions:
  contents: write

on:
  pull_request:
    branches:
      - master
    types: [closed]

jobs:
  check-and-update:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'submission/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Check for KIP deletions
        uses: ./.github/workflows/checks.yaml
      
      - name: Update README
        run: |
          echo 'Updating README with new KIP entries...'
          python .github/scripts/update_master.py

      - name: Push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update README with new KIP entries"
          git push

  check-deletions-and-integrity:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'submission/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2 # Necessary to ensure history for diffs
    
      - name: Check for deletions in 'kips' folder
        run: |
          git fetch origin master # Fetch the base branch to compare against
          DELETED_FILES=$(git diff --name-status origin/master...HEAD -- kips/ | grep ^D | wc -l)
          if [ "$DELETED_FILES" -gt 0 ]; then
            echo "Deletion of files in 'kips' folder is not allowed."
            exit 1
          fi

      - name: Check workflows directory integrity
        run: |
          # Navigate to the workflows directory
          cd .github/workflows/
          # Concatenate all file contents (sorted by name) and compute a single hash
          CURRENT_HASH=$(find . -type f -exec cat {} + | sort | sha256sum | awk '{print $1}')
          echo "Computed hash: $CURRENT_HASH"
          # Compare with known good hash
          if [ "$CURRENT_HASH" != ${{ secrets.WORKFLOWS_HASH }} ]; then
            echo "The .github/workflows/ directory has been tampered with!"
            exit 1
          fi
